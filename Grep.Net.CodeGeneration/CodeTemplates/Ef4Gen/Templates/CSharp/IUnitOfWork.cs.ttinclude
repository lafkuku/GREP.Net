<#+
// <copyright file="IUnitOfWork.cs.ttinclude" company="CompDJ">
//  Copyright © CompDJ. All Rights Reserved.
// </copyright>

/// <summary>T4 Template file.</summary>
public class IUnitOfWorkCs : T4TemplateBase
{
    /// <summary>Initializes a new instance of the IUnitOfWorkCs class.</summary>
    public IUnitOfWorkCs()
    {
		this.OutputName = "IUnitOfWork";
		this.OutputExtension = ".cs";
    }
	
	/// <summary>Renders output.</summary>
	public override string TransformText()
	{
		CodeGenerationTools code = new CodeGenerationTools(this);
		string currentNamespace = this.GetNamespace(T4Config.RepositoryNamespace, T4Config.Namespace);
		string usings = this.GetUsings(T4Config.RepositoryNamespace, T4Config.Namespace);
#>
// <copyright file="<#=this.OutputName#><#=T4Config.LanguageFileString()#>" company="<#=T4Config.CompanyName#>">
//  Copyright (c) <#=T4Config.CompanyName#>. All Rights Reserved.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace <#=currentNamespace#>
{
    using System;

    /// <summary>Unit Of Work interface.</summary>
    [System.CodeDom.Compiler.GeneratedCode("<#=T4Config.AppName#>", "<#=T4Config.AppVersion#>")]
    public interface IUnitOfWork : IDisposable
    {
        /// <summary>Commits the changes to the database.</summary>
        void Commit();
    }
}<#+
        return this.GenerationEnvironment.ToString().Replace("\t", "    ");
	}
	
	/// <summary>Validates the template.</summary>
	protected override void Validate()
    {
		if (string.IsNullOrEmpty(this.OutputName))
		{
	        this.Error("OutputName property is empty");
		}

		if (string.IsNullOrEmpty(this.OutputExtension))
		{
	        this.Error("OutputExtension property is empty");
		}
    }	
}
#>
